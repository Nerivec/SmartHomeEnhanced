alias: esphome Notify
sequence:
  - if:
      - condition: template
        value_template: "{{ ww_switch is defined and ww_switch != \"\" }}"
    then:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: "{{ ww_switch }}"
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 100
  - service: script.voice_get_greeted_message
    data:
      message: "{{ message }}"
      skip_greeting: false
      fallback: ", sir."
      fallback_prepend: true
      no_fallback_prepend_wordcount: 8
      morning: Morning sir.
      afternoon: Afternoon sir.
      evening: Evening sir.
    response_variable: greeted_message
  - service: tts.speak
    target:
      entity_id: tts.piper
    data:
      cache: true
      media_player_entity_id: "{{ target }}"
      message: "{{ greeted_message.text }}"
  - if:
      - condition: template
        value_template: "{{ ww_switch is defined and ww_switch != \"\" }}"
    then:
      - wait_template: "{{ is_state(target, 'idle') }}"
        continue_on_timeout: true
        timeout: "00:00:30"
      - service: switch.turn_on
        data: {}
        target:
          entity_id: "{{ ww_switch }}"
icon: mdi:microphone-message
mode: queued
max: 20
fields:
  message:
    selector:
      text: null
    name: Message
    required: true
  ww_switch:
    selector:
      boolean: null
    name: WW Switch
    description: >-
      If given the entity ID for a wake word switch, it will be turned off (and
      as such the associated voice pipeline) for the duration to prevent
      overloading the board outputting the TTS.
  target:
    selector:
      text: null
    name: Target
    description: Entity ID for the media player to output the TTS on.
    required: true
